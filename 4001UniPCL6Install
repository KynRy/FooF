# Define the base URL
$baseUrl = "https://ftp.hp.com/pub/softlib/software13/printers/UPD/"

# Function to get the latest driver URL
function Get-LatestDriverUrl {
    param (
        [string]$baseUrl
    )
    try {
        # Use WebClient to download the HTML content
        $webClient = New-Object System.Net.WebClient
        $htmlContent = $webClient.DownloadString($baseUrl)

        # Use regex to find the latest driver link
        $latestVersionUrl = [regex]::Matches($htmlContent, "upd-pcl6-x64-.*?\.exe") | Sort-Object -Property Value -Descending | Select-Object -First 1 -ExpandProperty Value
        if ($latestVersionUrl) {
            return "$baseUrl$latestVersionUrl"
        } else {
            Write-Warning "No driver executable found."
            return $null
        }
    } catch {
        Write-Error "Failed to retrieve the latest driver URL. Error: $_"
        return $null
    }
}

# Get the latest driver URL
$driverUrl = Get-LatestDriverUrl -baseUrl $baseUrl

if (-not $driverUrl) {
    exit
}

# Define paths
$downloadPath = "$env:TEMP\upd-pcl6-x64.exe"
$targetDirectory = "C:\drivers\printer\UniPCL6"
$zipFilePath = "$env:TEMP\upd-pcl6-x64.zip"

# Download the latest driver executable
Write-Host "Downloading driver from $driverUrl"
Invoke-WebRequest -Uri $driverUrl -OutFile $downloadPath

# Validate download
if (-not (Test-Path -Path $downloadPath)) {
    Write-Warning "The driver executable was not downloaded successfully."
    exit
}

# Rename and extract the executable
Move-Item -Path $downloadPath -Destination $zipFilePath -Force

# Ensure target directory exists
if (-not (Test-Path -Path $targetDirectory -PathType Container)) {
    New-Item -ItemType Directory -Path $targetDirectory -Force
}

# Extract the driver files
Write-Host "Extracting driver files to $targetDirectory"
Expand-Archive -Path $zipFilePath -DestinationPath $targetDirectory -Force
Write-Host "Extraction completed successfully."

# Install the drivers
$driverFiles = Get-ChildItem -Path $targetDirectory -Filter "*.inf" -Recurse
if ($driverFiles.Count -eq 0) {
    Write-Warning "No driver files found in the target directory."
    exit
}

$successfulInstallCount = 0
foreach ($driverFile in $driverFiles) {
    Write-Host "Installing driver: $($driverFile.FullName)"
    try {
        $result = Start-Process -FilePath "pnputil" -ArgumentList "/add-driver `"$($driverFile.FullName)`" /install" -NoNewWindow -Wait -PassThru
        if ($result.ExitCode -eq 0) {
            Write-Host "Driver installed successfully: $($driverFile.FullName)"
            $successfulInstallCount++
        } else {
            Write-Error "Failed to install driver: $($driverFile.FullName)"
        }
    } catch {
        Write-Error "An error occurred while installing driver: $($driverFile.FullName). Error: $_"
    }
}

Write-Host "Installation completed. $successfulInstallCount out of $($driverFiles.Count) drivers installed successfully."
